@model ReviewersQueryModel
@{
    ViewData["Title"] = "Reviewers";
    var previousPage = Model.CurrentPage - 1;
    if (previousPage < 1)
    {
        previousPage = 1;
    }

    var maxPage = Math.Ceiling((double)Model.ReviewsCount /
    Model.ReviewersPerPage);
    var shouldButtonBeDisabled = Model.CurrentPage >= maxPage;
}
<h1 class="text-center text-white">
    @ViewData["Title"]
</h1>

<section class="d-flex flex-column justify-content-between align-content-center text-white">

    <form id="form" method="get">
        @if (Model.VehicleId != null)
        {
            <input asp-for="VehicleId" hidden />
        }
        <div class="form-group mt-3 mb-3">
            <div class="d-flex">
                <input asp-for="@Model.SearchTerm" placeholder="Search..." class="form-control" />
                <button type="submit" id="submitBtn" class="w-10 btn btn-lg btn-primary">
                    <i class="bi bi-search"></i>
                </button>
            </div>
        </div>

        <div class="mt-3 mb-3">
            <button class="btn btn-lg btn-secondary collapsed" data-bs-toggle="collapse"
                    data-bs-target="#collapseExample" aria-expanded="false" aria-controls="collapseExample"
                    type="button" id="filterBtn">
                <i class="bi bi-filter-circle"></i>
                Filters
            </button>
        </div>
        <div class="collapse" id="collapseExample">
            <article class="d-flex flex-row flex-wrap justify-content-between w-100 mb-3">
                <div class="form-group">
                    <label asp-for="@Model.ReviewersPerPage" class="form-label custom-label">Reviewers Per Page</label>
                    <select asp-for="@Model.ReviewersPerPage" class="form-select">
                        @for (int i = 1; i <= 12; i++)
                        {
                            <option value="@i">@i</option>
                        }
                    </select>

                </div>
                <div class="form-group">
                    <label asp-for="@Model.ReviewerSorting" class="form-label custom-label">Sorting</label>
                    <select asp-for="@Model.ReviewerSorting" class="form-select">
                        @foreach (var sortingOption in Model.SortingOptions)
                        {
                            <option value="@sortingOption">@(string.Join(" ", Regex.Matches(sortingOption.ToString(), "[A-Z][a-z]*").Select(m => m.Value).ToArray()))</option>
                        }
                    </select>
                </div>
            </article>
        </div>
    </form>
    @if (Model.Reviewers.Count > 0)
    {
        @if (Model.Reviewers.Count > 1)
        {
            <article class="row row-cols-lg-2 row-cols-1 justify-content-between">
                @foreach (var reviewer in Model.Reviewers)
                {
                    <div class="col mt-3 mb-3">

                        <partial name="_ReviewerListPartial" model="reviewer" />
                    </div>
                }
            </article>

        }
        else
        {
            <article class="d-flex  row-cols-3 justify-content-center">
                @foreach (var reviewer in Model.Reviewers)
                {
                    <div class="col-lg-6 col-12 text-center">
                        <partial name="_ReviewerListPartial" model="reviewer" />
                    </div>
                }
            </article>
        }
        @if (Model.MaxPage > 1)
        {
            <div class="d-flex justify-content-between mt-3 mb-3">
                <div class="">
                    <a class="btn btn-primary btn-lg @(Model.CurrentPage == 1 ? "disabled" : string.Empty)"
                       asp-area="Salesman"
                       asp-controller="Reviewers"
                       asp-action="Index"
                       asp-route-searchTerm="@Model.SearchTerm"
                       asp-route-reviewersPerPage="@Model.ReviewersPerPage"
                       asp-route-currentPage="@previousPage"
                       asp-route-reviewSorting="@((int)Model.ReviewerSorting)"><i class="bi bi-arrow-left"></i></a>
                </div>
                <div class="justify-self-center">

                    @foreach (var pageNumber in Model.PreviousPages)
                    {
                        <a class="btn btn-primary btn-lg"
                           asp-area="Salesman"
                           asp-controller="Reviewers"
                           asp-action="Index"
                           asp-route-searchTerm="@Model.SearchTerm"
                           asp-route-reviewersPerPage="@Model.ReviewersPerPage"
                           asp-route-currentPage="@pageNumber"
                           asp-route-reviewSorting="@((int)Model.ReviewerSorting)">@pageNumber</a>
                    }
                    <a class="btn btn-primary btn-lg disabled"
                       asp-area="Salesman"
                       asp-controller="Reviewers"
                       asp-action="Index"
                       asp-route-searchTerm="@Model.SearchTerm"
                       asp-route-reviewersPerPage="@Model.ReviewersPerPage"
                       asp-route-currentPage="@Model.CurrentPage"
                       asp-route-reviewSorting="@((int)Model.ReviewerSorting)">@Model.CurrentPage</a>
                    @foreach (var pageNumber in Model.NextPages)
                    {
                        <a class="btn btn-primary btn-lg"
                           asp-area="Salesman"
                           asp-controller="Reviewers"
                           asp-action="Index"
                           asp-route-searchTerm="@Model.SearchTerm"
                           asp-route-reviewersPerPage="@Model.ReviewersPerPage"
                           asp-route-currentPage="@pageNumber"
                           asp-route-reviewerSorting="@((int)Model.ReviewerSorting)">@pageNumber</a>
                    }

                </div>
                <div class="">
                    <a class="btn btn-primary btn-lg @(shouldButtonBeDisabled ? "disabled" : string.Empty)"
                       asp-area="Salesman"
                       asp-controller="Reviewers"
                       asp-action="Index"
                       asp-route-searchTerm="@Model.SearchTerm"
                       asp-route-reviewersPerPage="@Model.ReviewersPerPage"
                       asp-route-currentPage="@(Model.CurrentPage + 1)"
                       asp-route-reviewSorting="@((int)Model.ReviewerSorting)"><i class="bi bi-arrow-right"></i></a>
                </div>
            </div>
        }
    }
    else
    {
        <h3 class="text-center mt-3 mb-3">No reviewers found!</h3>
    }
</section>

<script src="~/js/Reviewers/index.js"></script>
